1000 REMark QDOS disk reader
1010 REMark
1020 REMark By Richard Kettlewell
1030 REMark
1040 REMark To port to other machines
1050 REMark As stands, RUN before using PROCs
1060 REMark Use qdir #channel for a directory
1070 REMark Use xcopy 'source','destination'
1080 REMark to copy FROM flp1_.
1090 REMark
1100 REMark May not work with other than normal interleave.
1110 REMark
1120 REMark Port to Atari ST using Hisoft Modula-2 underway.
1130 REMark
1140 :
1150 b0$=''                             :REMark Block 0
1160 DirectDiskChannel%=-6              :REMark ERR.NO
1170 LastCheckedBlock%=-1               :REMark Speed optimisation
1180 CLS
1190                                    :
1200 DEFine PROCedure EnsureDiskReady
1210 LOCal a$,b$,c$,n%,pr$
1220                                    :REMark Get mapping block
1230  IF DirectDiskChannel%<0
1240   DirectDiskChannel%=FOP_IN('flp1_*d2d')
1250   IF DirectDiskChannel%<0 THEN PRINT#0;'Cannot open direct disk channel':STOP
1260  END IF
1270  GET#DirectDiskChannel%\1,a$:GET#DirectDiskChannel%\4,b$:GET#DirectDiskChannel%\7,c$
1280                                    :REMark Check standard disk
1290  IF a$(1 TO 4)<>'QL5A'
1300   INPUT \'Warning'\'======='\\"Can't read this disk safely"\\'Do you wish to proceed with read?'!pr$
1310   IF NOT pr$=='y' THEN RETurn
1320  END IF
1330                                    :REMark Don't do extra work
1340  IF b0$=a$&b$&c$ THEN RETurn
1350  LastCheckedBlock%=-1
1360  b0$=a$&b$&c$
1370  DIM map%(479,1)                   :REMark Mapping array
1380  m%=0
1390                                    :REMark Fill out mapping array
1400  FOR n%=97 TO 1534 STEP 3
1410   b$=b0$(n% TO n%+2)
1420   map%(m%,0)=CODE(b$(1))*16+CODE(b$(2))DIV 16
1430   map%(m%,1)=(CODE(b$(2))&&15)*256+CODE(b$(3))
1440   m%=m%+1
1450  END FOR n%
1460 PRINT m%
1470                                    :
1480  SectorOffsetPerTrack%=_peekw(38)
1490  SectorDirectoryEOF%=_peekw(34)
1500  ByteDirectoryEOF%=_peekw(36)
1510  SectorsPerTrack%=_peekw(26)
1520  SectorsPerCylinder%=_peekw(28)
1530  NumberOfTracks%=_peekw(30)
1540  SectorsPerBlock%=_peekw(32)
1550                                    :
1560  DIM ltopse%(SectorsPerCylinder%),ltopsi%(SectorsPerCylinder%)
1570  FOR n%=0 TO SectorsPerCylinder%:ltopse%(n%)=CODE(b0$(41+n%))&&127:ltopsi%(n%)=(CODE(b0$(41+n%))&&128)*2
1580 END DEFine
1590                                    :
1600 DEFine FuNction _peekw(o%):RETurn _peekb(o%)*256+_peekb(o%+1):END DEFine
1610 DEFine FuNction _peekb(o%):RETurn CODE(b0$(o%+1)):END DEFine
1620                                    :
1630 DEFine FuNction ReadBlock$(File%,Block%)
1640 LOCal n%
1650  FOR n%=LastCheckedBlock%+1 TO 479
1660   PRINT#0;!n%!
1670   IF File%=map%(n%,0) AND Block%=map%(n%,1) THEN LastCheckedBlock%=n%:PRINT#0;'. ';:RETurn ReadBlockDirect$(n%)
1680  END FOR n%
1690  FOR n%=0 TO LastCheckedBlock%
1700   PRINT#0;!n%!
1710   IF File%=map%(n%,0) AND Block%=map%(n%,1) THEN LastCheckedBlock%=n%:PRINT#0;'. ';:RETurn ReadBlockDirect$(n%)
1720  END FOR n%
1730  PRINT#0;'! ';
1740  RETurn ''
1750 END DEFine
1760                                    :
1770 DEFine FuNction ReadBlockDirect$(b%)
1780 LOCal s0%,s1%,s2%,tb%,t%
1790 LOCal si0%,si1%,si2%,t
1800 LOCal a$,b$,c$
1810  t%=(SectorsPerBlock%*b%) DIV SectorsPerCylinder%:REMark Track number
1820  t=65536*t%
1830  tb%=b% MOD (SectorsPerCylinder%/SectorsPerBlock%)
1840  si0%=ltopsi%(3*tb%+0)             :REMark Get sides for 3 sectors in block
1850  si1%=ltopsi%(3*tb%+1)             :REMark I am not betting on them
1860  si2%=ltopsi%(3*tb%+2)             :REMark being the same!
1870                                    :REMark These formulae given in
1880                                    :REMark Sinclair Ql World March 1986
1890                                    :REMark This program based on the disk
1900                                    :REMark article p.34 of that issue
1910  s0%=(ltopse%(3*tb%+0)+(t%*SectorOffsetPerTrack%))MOD SectorsPerTrack%
1920  s1%=(ltopse%(3*tb%+1)+(t%*SectorOffsetPerTrack%))MOD SectorsPerTrack%
1930  s2%=(ltopse%(3*tb%+2)+(t%*SectorOffsetPerTrack%))MOD SectorsPerTrack%
1940  GET#DirectDiskChannel%\t+si0%+s0%+1,a$
1950  GET#DirectDiskChannel%\t+si1%+s1%+1,b$
1960  GET#DirectDiskChannel%\t+si2%+s2%+1,c$
1970  RETurn a$&b$&c$
1980 END DEFine
1990                                    :REMark Directory of disk
2000 DEFine PROCedure qdir(DirectoryOutput%)
2010 LOCal BlockRead$,Entry$,Null$
2020 LOCal NameLength%,n%,f%,p%
2030  EnsureDiskReady
2040  LastCheckedBlock%=-1
2050  Null$=FILL$(CHR$(0),4)             :REMark 0.L
2060  FOR n%=0 TO SectorDirectoryEOF% DIV SectorsPerBlock%
2070   BlockRead$=ReadBlock$(0,n%)
2080   FOR f%=1 TO LEN(BlockRead$)-63 STEP 64
2090    Entry$=BlockRead$(f% TO f%+63)
2100    IF Entry$(1 TO 4)<>Null$
2110     NameLength%=CODE(Entry$(15))*256+CODE(Entry$(16))
2120     IF NameLength%>36 THEN NEXT f%:EXIT f%
2130     IF NameLength% THEN PRINT#DirectoryOutput%;Entry$(17 TO 16+NameLength%):ELSE PRINT#DirectoryOutput%
2140    END IF
2150   END FOR f%
2160  END FOR n%
2170  CLOSE#DirectDiskChannel%:DirectDiskChannel%=-6
2180 END DEFine
2190 :
2200 REMark Copy a Ql file to a device on the host computer
2210 DEFine PROCedure xcopy(SourceFile$,TargetFile$)
2220 LOCal BlockRead$,Entry$,Null$,FileName$,FileNumber%
2230 LOCal NameLength%,n%,f%,p%,FileBlockNumber%
2240 LOCal BytesPerBlock%,OutputChannel%,RemoveHeader%
2250 LOCal FileLength,LengthRemaining
2260  EnsureDiskReady
2270  LastCheckedBlock%=-1
2280  Null$=FILL$(CHR$(0),4)             :REMark 0.L
2290  REMark Find file number
2300  FileNumber%=0
2310  FOR n%=0 TO SectorDirectoryEOF% DIV SectorsPerBlock%
2320   BlockRead$=ReadBlock$(0,n%)
2330   FOR f%=1 TO LEN(BlockRead$)-63 STEP 64
2340    Entry$=BlockRead$(f% TO f%+63)
2350    IF Entry$(1 TO 4)<>Null$
2360     NameLength%=CODE(Entry$(15))*256+CODE(Entry$(16))
2370     IF NameLength%>36 THEN NEXT f%:EXIT f%
2380     IF NameLength% THEN FileName$=Entry$(17 TO 16+NameLength%):ELSE FileName$=''
2390     IF FileName$==SourceFile$ THEN FileNumber%=1+ABS(FileNumber%):EXIT n%
2400    END IF
2410    FileNumber%=FileNumber%-1
2420   END FOR f%
2430  END FOR n%
2440  IF FileNumber%<0 THEN PRINT#0;'Cannot find file ';SourceFile$:CLOSE#DirectDiskChannel%:DirectDiskChannel%=-7:STOP
2450  OutputChannel%=FOP_NEW(TargetFile$)
2460  IF OutputChannel%<0 THEN PRINT#0;'Cannot find file ';TargetFile$:CLOSE#DirectDiskChannel%:DirectDiskChannel%=-7:STOP
2470  BytesPerBlock%=512*SectorsPerBlock%
2480  FileLength=CODE(Entry$(4))+256*(CODE(Entry$(3))+256*(CODE(Entry$(2))+256*CODE(Entry$(1))))
2490  LengthRemaining=FileLength
2500  RemoveHeader%=1
2510  IF FileLength>BytesPerBlock%
2520   FOR FileBlockNumber%=0 TO INT(FileLength/BytesPerBlock%)-1
2530    BlockRead$=ReadBlock$(FileNumber%,FileBlockNumber%)
2540    LengthRemaining=LengthRemaining-BytesPerBlock%
2550    IF RemoveHeader%
2560     BlockRead$=BlockRead$(65 TO)
2570     RemoveHeader%=0
2580    END IF
2590    PRINT#OutputChannel%;BlockRead$;
2600   END FOR FileBlockNumber%
2610  ELSE
2620   FileBlockNumber%=-1
2630  END IF
2640  IF LengthRemaining
2650   BlockRead$=ReadBlock$(FileNumber%,FileBlockNumber%+1)
2660   BlockRead$=BlockRead$(1 TO LengthRemaining)
2670   IF RemoveHeader% THEN BlockRead$=BlockRead$(65 TO)
2680   PRINT#OutputChannel%;BlockRead$;
2690  END IF
2700  CLOSE#OutputChannel%,#DirectDiskChannel%:DirectDiskChannel%=-6
2710 END DEFine
2720 :
2730 DEFine PROCedure sv
2740  SAVE_O'flp1_dfs_qdos_read_bas'
2750  SAVE_O'flp2_dfs_qdos_read_bas'
2760 END DEFine
